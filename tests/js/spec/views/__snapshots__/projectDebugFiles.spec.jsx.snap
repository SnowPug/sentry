// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProjectDebugFiles renders 1`] = `
<ProjectDebugSymbols
  location={
    Object {
      "query": Object {},
    }
  }
  params={
    Object {
      "orgId": "org",
      "projectId": "project",
    }
  }
>
  <SentryDocumentTitle
    objSlug="project"
    title="Debug Files"
  >
    <SideEffect(DocumentTitle)
      title="Debug Files - project - Sentry"
    >
      <DocumentTitle
        title="Debug Files - project - Sentry"
      />
    </SideEffect(DocumentTitle)>
  </SentryDocumentTitle>
  <StyledSettingsPageHeading
    noTitleStyles={false}
    title="Debug Information Files"
  >
    <SettingsPageHeading
      className="css-xtfhnp-StyledSettingsPageHeading e1uay4fd4"
      noTitleStyles={false}
      title="Debug Information Files"
    >
      <div
        className="css-xtfhnp-StyledSettingsPageHeading e1uay4fd4"
      >
        <TitleAndActions>
          <div
            className="css-ifzfc5-TitleAndActions e1uay4fd0"
          >
            <Title
              styled={false}
            >
              <div
                className="css-120v9s3-Title e1uay4fd1"
              >
                <HeaderTitle>
                  <h4
                    className="css-186zxqn-HeaderTitle eqkydle2"
                  >
                    Debug Information Files
                  </h4>
                </HeaderTitle>
              </div>
            </Title>
          </div>
        </TitleAndActions>
      </div>
    </SettingsPageHeading>
  </StyledSettingsPageHeading>
  <TextBlock>
    <div
      className="css-1j3tvli-TextBlock e1x1lar10"
    >
      
            Debug information files are used to convert addresses and minified
            function names from native crash reports into function names and
            locations.
          
    </div>
  </TextBlock>
  <TextBlock>
    <div
      className="css-1j3tvli-TextBlock e1x1lar10"
    >
      This list contains all uploaded debug information files:
    </div>
  </TextBlock>
  <Panel>
    <Component
      className="css-1xbmlp0-Panel e119nu470"
    >
      <div
        className="css-1xbmlp0-Panel e119nu470"
      >
        <PanelHeader
          hasButtons={true}
        >
          <div
            className="css-1yuyr9v-PanelHeader en8g1d30"
          >
            <Box
              width={0.375}
            >
              <div
                className="css-cxbzjr"
                width={0.375}
              >
                Debug ID
              </div>
            </Box>
            <Box
              flex="1"
            >
              <div
                className="css-vti0ei"
              >
                Name
              </div>
            </Box>
            <Box>
              <div
                className="css-roynbj"
              >
                <withRouter(AsyncComponentSearchInput)
                  api={
                    Client {
                      "_chain": [Function],
                      "_wrapRequest": [Function],
                      "bulkUpdate": [Function],
                      "handleRequestError": [Function],
                      "hasProjectBeenRenamed": [Function],
                    }
                  }
                  className="search"
                  onError={[Function]}
                  onSuccess={[Function]}
                  placeholder="Search DIFs"
                  updateRoute={true}
                  url="/projects/org/project/"
                >
                  <AsyncComponentSearchInput
                    api={
                      Client {
                        "_chain": [Function],
                        "_wrapRequest": [Function],
                        "bulkUpdate": [Function],
                        "handleRequestError": [Function],
                        "hasProjectBeenRenamed": [Function],
                      }
                    }
                    className="search"
                    debounceWait={200}
                    location={
                      Object {
                        "query": Object {},
                      }
                    }
                    onError={[Function]}
                    onSuccess={[Function]}
                    placeholder="Search DIFs"
                    router={
                      Object {
                        "createHref": [MockFunction],
                        "go": [MockFunction],
                        "goBack": [MockFunction],
                        "goForward": [MockFunction],
                        "isActive": [MockFunction],
                        "listen": [MockFunction],
                        "location": Object {
                          "query": Object {},
                        },
                        "push": [MockFunction],
                        "replace": [MockFunction],
                        "setRouteLeaveHook": [MockFunction],
                      }
                    }
                    updateRoute={true}
                    url="/projects/org/project/"
                  >
                    <Form
                      onSubmit={[Function]}
                    >
                      <form
                        className="css-1i180od-Form e6xwo1"
                        onSubmit={[Function]}
                      >
                        <Input
                          className="search"
                          onChange={[Function]}
                          placeholder="Search DIFs"
                          value=""
                        >
                          <input
                            className="search css-18c7iee-Input e1xej46s0"
                            onChange={[Function]}
                            placeholder="Search DIFs"
                            value=""
                          />
                        </Input>
                      </form>
                    </Form>
                  </AsyncComponentSearchInput>
                </withRouter(AsyncComponentSearchInput)>
              </div>
            </Box>
          </div>
        </PanelHeader>
        <PanelBody
          direction="column"
          disablePadding={true}
          flex={false}
        >
          <EmotionCssPropInternal
            __EMOTION_LABEL_PLEASE_DO_NOT_USE__="PanelBody"
            __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
            css={
              Object {
                "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRleHQudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdZIiwiZmlsZSI6InRleHQudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtjc3N9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuXG5jb25zdCB0ZXh0U3R5bGVzID0gKCkgPT4ge1xuICByZXR1cm4gY3NzYFxuICAgIC8qIHN0eWxlbGludC1kaXNhYmxlIG5vLWRlc2NlbmRpbmctc3BlY2lmaWNpdHkgKi9cbiAgICBoMSxcbiAgICBoMixcbiAgICBoMyxcbiAgICBoNCxcbiAgICBoNSxcbiAgICBoNixcbiAgICBwLFxuICAgIHVsLFxuICAgIG9sLFxuICAgIHRhYmxlLFxuICAgIGRsLFxuICAgIGJsb2NrcXVvdGUsXG4gICAgZm9ybSxcbiAgICBwcmUsXG4gICAgLmF1dG8tc2VsZWN0LXRleHQsXG4gICAgLnNlY3Rpb24sXG4gICAgW2NsYXNzXj0naGlnaGxpZ2h0LSddIHtcbiAgICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG5cbiAgICAgICY6bGFzdC1jaGlsZCB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaDEsXG4gICAgaDIsXG4gICAgaDMsXG4gICAgaDQsXG4gICAgaDUsXG4gICAgaDYge1xuICAgICAgbGluZS1oZWlnaHQ6IDEuMjtcbiAgICB9XG5cbiAgICBwLFxuICAgIHVsLFxuICAgIG9sLFxuICAgIGJsb2NrcXVvdGUge1xuICAgICAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgICB9XG5cbiAgICBoMSB7XG4gICAgICBmb250LXNpemU6IDJlbTtcbiAgICB9XG5cbiAgICBoMiB7XG4gICAgICBmb250LXNpemU6IDEuNzVlbTtcbiAgICB9XG5cbiAgICBoMyB7XG4gICAgICBmb250LXNpemU6IDEuNWVtO1xuICAgIH1cblxuICAgIGg0IHtcbiAgICAgIGZvbnQtc2l6ZTogMS4yNWVtO1xuICAgIH1cblxuICAgIGg1IHtcbiAgICAgIGZvbnQtc2l6ZTogMWVtO1xuICAgIH1cblxuICAgIHByZSB7XG4gICAgICB3b3JkLWJyZWFrOiBicmVhay1hbGw7XG4gICAgICB3aGl0ZS1zcGFjZTogcHJlLXdyYXA7XG4gICAgfVxuICAgIC8qIHN0eWxlbGludC1lbmFibGUgKi9cbiAgYDtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHRleHRTdHlsZXM7XG4iXX0= */",
                "name": "7uw193-PanelBody",
                "next": undefined,
                "styles": "h1,h2,h3,h4,h5,h6,p,ul,ol,table,dl,blockquote,form,pre,.auto-select-text,.section,[class^='highlight-']{margin-bottom:20px;&:last-child{margin-bottom:0;}}h1,h2,h3,h4,h5,h6{line-height:1.2;}p,ul,ol,blockquote{line-height:1.5;}h1{font-size:2em;}h2{font-size:1.75em;}h3{font-size:1.5em;}h4{font-size:1.25em;}h5{font-size:1em;}pre{word-break:break-all;white-space:pre-wrap;};;label:PanelBody;/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhbmVsQm9keS5qc3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBbUJNIiwiZmlsZSI6InBhbmVsQm9keS5qc3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2Nzc30gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQge0ZsZXh9IGZyb20gJ0ByZWJhc3MvZ3JpZC9lbW90aW9uJztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgc3BhY2UgZnJvbSAnYXBwL3N0eWxlcy9zcGFjZSc7XG5pbXBvcnQgdGV4dFN0eWxlcyBmcm9tICdhcHAvc3R5bGVzL3RleHQnO1xuXG5jb25zdCBQYW5lbEJvZHkgPSAoe2Rpc2FibGVQYWRkaW5nLCBmbGV4LCBkaXJlY3Rpb24sIC4uLnByb3BzfSkgPT4ge1xuICBjb25zdCBwYWRkaW5nID0gIWRpc2FibGVQYWRkaW5nXG4gICAgPyBjc3NgXG4gICAgICAgIHBhZGRpbmc6ICR7c3BhY2UoMil9O1xuICAgICAgYFxuICAgIDogJyc7XG4gIGNvbnN0IGZsZXhEaXJlY3Rpb24gPSBmbGV4ID8gZGlyZWN0aW9uIDogdW5kZWZpbmVkO1xuICBjb25zdCBDb21wID0gZmxleCA/IEZsZXggOiAnZGl2JztcblxuICByZXR1cm4gKFxuICAgIDxDb21wXG4gICAgICBjc3M9e1t0ZXh0U3R5bGVzKHByb3BzKSwgcGFkZGluZ119XG4gICAgICB7Li4ucHJvcHN9XG4gICAgICB7Li4uKGZsZXhEaXJlY3Rpb24gPyB7ZmxleERpcmVjdGlvbn0gOiBudWxsKX1cbiAgICAvPlxuICApO1xufTtcblxuUGFuZWxCb2R5LnByb3BUeXBlcyA9IHtcbiAgZmxleDogUHJvcFR5cGVzLmJvb2wsXG4gIGRpcmVjdGlvbjogUHJvcFR5cGVzLnN0cmluZyxcbiAgZGlzYWJsZVBhZGRpbmc6IFByb3BUeXBlcy5ib29sLFxufTtcblxuUGFuZWxCb2R5LmRlZmF1bHRQcm9wcyA9IHtcbiAgZmxleDogZmFsc2UsXG4gIGRpcmVjdGlvbjogJ2NvbHVtbicsXG4gIGRpc2FibGVQYWRkaW5nOiB0cnVlLFxufTtcblxuZXhwb3J0IGRlZmF1bHQgUGFuZWxCb2R5O1xuIl19 */",
                "toString": [Function],
              }
            }
          >
            <div
              className="css-7uw193-PanelBody"
            >
              <EmptyStateWarning
                small={false}
              >
                <EmptyStreamWrapper
                  data-test-id="empty-state"
                >
                  <div
                    className="css-15oag6i-EmptyStreamWrapper e1107k000"
                    data-test-id="empty-state"
                  >
                    <HeroIcon
                      size="54"
                      src="icon-circle-exclamation"
                    >
                      <ForwardRef
                        className="css-nw5dfc-InlineSvg-HeroIcon e1csd7tf0"
                        size="54"
                        src="icon-circle-exclamation"
                      >
                        <svg
                          className="css-nw5dfc-InlineSvg-HeroIcon e1csd7tf0"
                          height="54"
                          viewBox={Object {}}
                          width="54"
                        >
                          <use
                            href="#test"
                            xlinkHref="#test"
                          />
                        </svg>
                      </ForwardRef>
                    </HeroIcon>
                    <p>
                      There are no debug symbols for this project.
                    </p>
                  </div>
                </EmptyStreamWrapper>
              </EmptyStateWarning>
            </div>
          </EmotionCssPropInternal>
        </PanelBody>
      </div>
    </Component>
  </Panel>
  <Styled(Pagination)
    onCursor={[Function]}
  >
    <Pagination
      className="css-yneqnx e1vkspke0"
      onCursor={[Function]}
    />
  </Styled(Pagination)>
</ProjectDebugSymbols>
`;

exports[`ProjectDebugFiles renders empty 1`] = `
<Fragment>
  <SentryDocumentTitle
    objSlug="project"
    title="Debug Files"
  />
  <StyledSettingsPageHeading
    noTitleStyles={false}
    title="Debug Information Files"
  />
  <TextBlock>
    
            Debug information files are used to convert addresses and minified
            function names from native crash reports into function names and
            locations.
          
  </TextBlock>
  <TextBlock>
    This list contains all uploaded debug information files:
  </TextBlock>
  <Panel>
    <PanelHeader
      hasButtons={true}
    >
      <Box
        width={0.375}
      >
        Debug ID
      </Box>
      <Box
        flex="1"
      >
        Name
      </Box>
      <Box>
        <withRouter(AsyncComponentSearchInput)
          api={
            Client {
              "_chain": [Function],
              "_wrapRequest": [Function],
              "bulkUpdate": [Function],
              "handleRequestError": [Function],
              "hasProjectBeenRenamed": [Function],
            }
          }
          className="search"
          onError={[Function]}
          onSuccess={[Function]}
          placeholder="Search DIFs"
          updateRoute={true}
          url="/projects/org/project/"
        />
      </Box>
    </PanelHeader>
    <PanelBody
      direction="column"
      disablePadding={true}
      flex={false}
    >
      <EmptyStateWarning
        small={false}
      >
        <p>
          There are no debug symbols for this project.
        </p>
      </EmptyStateWarning>
    </PanelBody>
  </Panel>
  <Styled(Pagination)
    onCursor={[Function]}
  />
</Fragment>
`;
